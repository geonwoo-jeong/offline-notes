{"version":3,"sources":["fragments.ts","queries.ts","offline.ts","clientState.ts","apollo.ts","Components/Editor/EditorPresenter.tsx","Components/Editor/index.ts","Components/Editor/EditorContainer.tsx","Routes/Add/AddPresenter.tsx","Routes/Add/AddContainer.tsx","Routes/Add/index.ts","Routes/Edit/EditPresenter.tsx","Routes/Edit/EditContainer.tsx","Routes/Edit/index.ts","Components/Title/Title.tsx","Components/Title/index.ts","Routes/Note/NotePresenter.tsx","Routes/Note/index.ts","Routes/Note/NoteContainer.tsx","Components/Icons/plus.svg","Routes/Notes/NotesPresenter.tsx","Routes/Notes/index.ts","Routes/Notes/NotesContainer.tsx","Components/App/App.tsx","globalStyles.ts","index.tsx"],"names":["NOTE_FRAGMENT","gql","_templateObject","GET_NOTES","queries_templateObject","GET_NOTE","_templateObject2","saveNotes","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","cache","_cache$readQuery","notes","jsonNotes","wrap","_context","prev","next","readQuery","query","JSON","stringify","ImmortalDB","set","t0","console","log","stop","this","_x","apply","arguments","resolvers","Query","note","_","variables","id","config","dataIdFromObject","__typename","readFragment","fragment","Mutation","editNote","_ref2","_ref3","content","title","noteId","updatedNote","writeFragment","data","createNote","_ref4","newNote","length","writeData","concat","toConsumableArray","defaults","_callee2","parsedNotes","_context2","get","sent","parse","abrupt","restoreNotes","InMemoryCache","stateLink","withClientState","typeDefs","client","ApolloClient","link","ApolloLink","from","TitleInput","styled","TextareaAutosize","EditorPresenter_templateObject","ContentPreview","div","EditorPresenter_templateObject2","ContentInput","_templateObject3","TitleContainer","_templateObject4","Button","button","_templateObject5","EditorPresenter","onInputChange","onSave","react_default","createElement","Fragment","EditorPresenter_TitleContainer","value","onChange","placeholder","name","onClick","dist_default","markdown","className","EditorContainer","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","_event$target","target","setState","defineProperty","_this$state","state","_this$state2","Editor_EditorPresenter","Component","AddPresenter","Editor","AddNoteMutation","ADD_NOTE","AddContainer_templateObject","AddContainer","push","history","_this2","AddContainer_AddNoteMutation","mutation","Add_AddPresenter","EditPresenter","_data$note","EDIT_NOTE","EditContainer_templateObject","EditNoteMutation","EditContainer","match","params","react_apollo_browser_umd","EditContainer_EditNoteMutation","Edit_EditPresenter","Header","Title_templateObject","Title","h1","Title_templateObject2","Title_templateObject3","Link","to","Title_Button","NotePresenter","Components_Title","NoteContainer","Note_NotePresenter","_extends","assign","i","source","key","prototype","hasOwnProperty","plus_ref","d","plus_SvgComponent","width","height","viewBox","__webpack_require__","p","Note","NotesPresenter_templateObject","Subtitle","h2","NotesPresenter_templateObject2","NotesPresenter","map","NotesPresenter_Note","NotesContainer","Notes_NotesPresenter","App","BrowserRouter","basename","process","Switch","Route","exact","path","component","Notes","Add","Edit","GlobalStyle","createGlobalStyle","globalStyles_templateObject","ReactDOM","render","Components_App_App","document","getElementById"],"mappings":"0VAEO,IAAMA,EAAgBC,IAAHC,qVCCnB,IAAMC,EAAYF,IAAHG,IAMlBJ,GAGSK,EAAWJ,IAAHK,IAMjBN,GCfSO,EAAS,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAMC,GAAN,IAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAC,EAAAO,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAN,EACLD,EAAMQ,UAAU,CAAEC,MAAOrB,IAAnCc,EADeD,EACfC,MACFC,EAAYO,KAAKC,UAAUT,GAFVG,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAIfK,IAAWC,IAAI,QAASV,GAJT,OAAAE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAS,GAAAT,EAAA,SAMrBU,QAAQC,IAARX,EAAAS,IANqB,yBAAAT,EAAAY,SAAAlB,EAAAmB,KAAA,YAAH,gBAAAC,GAAA,OAAA1B,EAAA2B,MAAAF,KAAAG,YAAA,GCCTC,EAAY,CACvBC,MAAO,CACLC,KAAM,SAACC,EAAGC,EAAJjC,GAA6B,IAAZO,EAAYP,EAAZO,MACf2B,EAAK3B,EAAM4B,OAAOC,iBAAiB,CACvCC,WAAY,OACZH,GAAID,EAAUC,KAEVH,EAAOxB,EAAM+B,aAAa,CAAEC,SAAU/C,EAAe0C,OAC3D,OAAOH,IAIXS,SAAU,CACRC,SAAU,SAACT,EAADU,EAAAC,GAA0C,IAApCT,EAAoCQ,EAApCR,GAAIU,EAAgCF,EAAhCE,QAASC,EAAuBH,EAAvBG,MAAWtC,EAAYoC,EAAZpC,MAChCuC,EAASvC,EAAM4B,OAAOC,iBAAiB,CAC3CC,WAAY,OACZH,OAEIa,EAAc,CAClBV,WAAY,OACZO,UACAV,KACAW,SAQF,OANAtC,EAAMyC,cAAc,CAClBC,KAAMF,EACNR,SAAU/C,EACV0C,GAAIY,IAEN/C,EAAUQ,GACHwC,GAGTG,WAAY,SAAClB,EAAGC,EAAJkB,GAA6B,IAAZ5C,EAAY4C,EAAZ5C,MACnBE,EAAUF,EAAMQ,UAAU,CAAEC,MAAOrB,IAAnCc,MACAoC,EAAmBZ,EAAnBY,MACFO,EAAU,CACdf,WAAY,OACZO,QAHyBX,EAAZW,QAIbV,GAAIzB,EAAM4C,OAAS,EACnBR,SAQF,OANAtC,EAAM+C,UAAU,CACdL,KAAM,CACJxC,MAAK,CAAG2C,GAAHG,OAAAtD,OAAAuD,EAAA,EAAAvD,CAAeQ,OAGxBV,EAAUQ,GACH6C,KAKAK,EAAW,CACtBhD,MD7CuB,eAAAiC,EAAAzC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAqD,IAAA,IAAAjD,EAAAkD,EAAA,OAAAxD,EAAAC,EAAAO,KAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EACNK,IAAW0C,IAAI,SADT,YACpBpD,EADoBmD,EAAAE,MAAA,CAAAF,EAAA9C,KAAA,gBAAA8C,EAAA/C,KAAA,EAIhB8C,EAAc1C,KAAK8C,MAAMtD,GAJTmD,EAAAI,OAAA,SAKfL,GALe,cAAAC,EAAA/C,KAAA,EAAA+C,EAAAvC,GAAAuC,EAAA,SAOtBtC,QAAQC,IAARqC,EAAAvC,IAPsBuC,EAAAI,OAAA,SAQf,IARe,eAAAJ,EAAAI,OAAA,SAWnB,IAXmB,yBAAAJ,EAAApC,SAAAkC,EAAAjC,KAAA,YAAH,yBAAAiB,EAAAf,MAAAF,KAAAG,YAAA,EC6ChBqC,ICpDH1D,EAAQ,IAAI2D,IAEZC,EAAYC,YAAgB,CAChC7D,QACAkD,WACA5B,YACAwC,SDgDsB,6dCxCTC,EALA,IAAIC,IAAa,CAC9BhE,QACAiE,KAAMC,IAAWC,KAAK,CAACP,ovBCLzB,IAAMQ,EAAaC,YAAOC,IAAPD,CAAHE,KASVC,EAAiBH,IAAOI,IAAVC,KAMdC,EAAeN,YAAOC,IAAPD,CAAHO,KAKZC,EAAiBR,IAAOI,IAAVK,KAMdC,GAASV,IAAOW,OAAVC,KA8BGC,GA5BsB,SAAAzF,GAAA,IACnC6C,EADmC7C,EACnC6C,MACAD,EAFmC5C,EAEnC4C,QACA8C,EAHmC1F,EAGnC0F,cACAC,EAJmC3F,EAInC2F,OAJmC,OAMnCC,EAAAxF,EAAAyF,cAAAD,EAAAxF,EAAA0F,SAAA,KACEF,EAAAxF,EAAAyF,cAACE,EAAD,KACEH,EAAAxF,EAAAyF,cAAClB,EAAD,CACEqB,MAAOnD,EACPoD,SAAUP,EACVQ,YAAa,cACbC,KAAM,UAERP,EAAAxF,EAAAyF,cAACP,GAAD,CAAQc,QAAST,GAAjB,SAEFC,EAAAxF,EAAAyF,cAACd,EAAD,KACEa,EAAAxF,EAAAyF,cAACX,EAAD,CACEc,MAAOpD,EACPqD,SAAUP,EACVQ,YAAa,4BACbC,KAAM,YAERP,EAAAxF,EAAAyF,cAACQ,EAAAjG,EAAD,CAAkBkG,SAAU1D,EAAS2D,UAAW,gBC9DvCC,eCiBb,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAzG,OAAA0G,EAAA,EAAA1G,CAAAwB,KAAA+E,IACjBE,EAAAzG,OAAA2G,EAAA,EAAA3G,CAAAwB,KAAAxB,OAAA4G,EAAA,EAAA5G,CAAAuG,GAAAM,KAAArF,KAAMgF,KAqBDf,cAAyD,SAAAqB,GAAS,IAAAC,EAGnED,EADFE,OAAUjB,EAF2DgB,EAE3DhB,MAAOG,EAFoDa,EAEpDb,KAEnBO,EAAKQ,SAALjH,OAAAkH,EAAA,EAAAlH,CAAA,GACGkG,EAAOH,KA3BOU,EA+BZf,OAAS,WAAM,IACZA,EAAWe,EAAKD,MAAhBd,OADYyB,EAEWV,EAAKW,MACpC1B,EAHoByB,EAEZvE,MAFYuE,EAELxE,QAFKwE,EAEIlF,KA/BxBwE,EAAKW,MAAQ,CACXzE,QAAS6D,EAAM7D,SAAW,GAC1BV,GAAIuE,EAAMvE,IAAM,KAChBW,MAAO4D,EAAM5D,OAAS,IALP6D,wEASH,IAAAY,EACa7F,KAAK4F,MAAxBxE,EADMyE,EACNzE,MAAOD,EADD0E,EACC1E,QAEf,OACEgD,EAAAxF,EAAAyF,cAAC0B,GAAD,CACE1E,MAAOA,EACPD,QAASA,EACT8C,cAAejE,KAAKiE,cACpBC,OAAQlE,KAAKkE,gBAlBwB6B,aCL9BC,GAJmB,SAAAzH,GAAA,IAAG2F,EAAH3F,EAAG2F,OAAH,OAChCC,EAAAxF,EAAAyF,cAAC6B,GAAD,CAAQzB,SAAU,KAAMN,OAAQA,iOCD5BgC,yIAAwBnF,YAExBoF,GAAWnI,IAAHoI,MCTCC,8MD+BNnC,OAAS,SAAC9C,EAAeD,GAAoB,IAErCmF,EACTrB,EAAKD,MADPuB,QAAWD,KAEC,KAAVlF,GAA4B,KAAZD,IAClB8D,EAAKxD,WAAW,CAAEjB,UAAW,CAAEY,QAAOD,aACtCmF,EAAK,+EAjBO,IAAAE,EAAAxG,KACd,OACEmE,EAAAxF,EAAAyF,cAACqC,GAAD,CAAiBC,SAAUP,IACxB,SAAA1E,GAEC,OADA+E,EAAK/E,WAAaA,EACX0C,EAAAxF,EAAAyF,cAACuC,GAAD,CAAcnC,SAAU,KAAMN,OAAQsC,EAAKtC,kBARlB6B,aEK3Ba,GAfoB,SAAArI,GAAsB,IAAnBiD,EAAmBjD,EAAnBiD,KAAM0C,EAAa3F,EAAb2F,OAAa2C,EAGnDrF,EADFlB,KAAQc,EAF6CyF,EAE7CzF,MAAOD,EAFsC0F,EAEtC1F,QAASV,EAF6BoG,EAE7BpG,GAE1B,OACE0D,EAAAxF,EAAAyF,cAAC6B,GAAD,CACE7E,MAAOA,EACPD,QAASA,EACTV,GAAIA,EACJyD,OAAQA,EACRM,SAAU,gPCRhB,IAAMsC,GAAY9I,IAAH+I,MAQTC,yIAAyBjG,YCjBhBkG,8MD4CN/C,OAAS,SAAC9C,EAAeD,EAAiBV,GAAe,IAEjD6F,EACTrB,EAAKD,MADPuB,QAAWD,KAEC,KAAVlF,GAA4B,KAAZD,GAAkBV,IACpCwE,EAAKjE,SAAS,CAAER,UAAW,CAAEY,QAAOD,UAASV,QAC7C6F,EAAK,+EA5BO,IAAAE,EAAAxG,KAGAS,EAEVT,KAAKgF,MAHPkC,MACEC,OAAU1G,GAGd,OACE0D,EAAAxF,EAAAyF,cAACgD,EAAA,MAAD,CAAO7H,MAAOnB,EAAUoC,UAAW,CAAEC,OAClC,SAAAlC,GAAA,IAAGiD,EAAHjD,EAAGiD,KAAH,OACCA,EAAKlB,KACH6D,EAAAxF,EAAAyF,cAACiD,GAAD,CAAkBX,SAAUI,IACzB,SAAA9F,GAEC,OADAwF,EAAKxF,SAAWA,EACTmD,EAAAxF,EAAAyF,cAACkD,GAAD,CAAe9F,KAAMA,EAAM0C,OAAQsC,EAAKtC,WAGjD,cAnB6B6B,2jBET3C,IAAMwB,GAASpE,IAAOI,IAAViE,MAONC,GAAQtE,IAAOuE,GAAVC,MAML9D,GAASV,IAAOW,OAAV8D,MCvBGH,GDkCqB,SAAAlJ,GAAA,IAAG6C,EAAH7C,EAAG6C,MAAO2B,EAAVxE,EAAUwE,KAAMe,EAAhBvF,EAAgBuF,OAAhB,OAClCK,EAAAxF,EAAAyF,cAAAD,EAAAxF,EAAA0F,SAAA,KACEF,EAAAxF,EAAAyF,cAACmD,GAAD,KACEpD,EAAAxF,EAAAyF,cAACqD,GAAD,KAAQrG,GACR+C,EAAAxF,EAAAyF,cAACyD,GAAA,EAAD,CAAMC,GAAI/E,GACRoB,EAAAxF,EAAAyF,cAAC2D,GAAD,KAASjE,OEVFkE,GAtBoB,SAAAzJ,GAAc,IAAXiD,EAAWjD,EAAXiD,KACpC,GAAIA,EAAKlB,KAAM,KAAAuG,EAGTrF,EADFlB,KAAQc,EAFGyF,EAEHzF,MAAWC,EAFRwF,EAEIpG,GAAYU,EAFhB0F,EAEgB1F,QAE7B,OACEgD,EAAAxF,EAAAyF,cAAAD,EAAAxF,EAAA0F,SAAA,KACEF,EAAAxF,EAAAyF,cAAC6D,GAAD,CAAO7G,MAAOA,EAAO0C,OAAQ,OAAQf,KAAI,SAAAjB,OAAWT,KACpD8C,EAAAxF,EAAAyF,cAACQ,EAAAjG,EAAD,CAAkBkG,SAAU1D,KAIhC,OACEgD,EAAAxF,EAAAyF,cAAC6D,GAAD,CACE7G,MAAO,4BACP0C,OAAQ,gBACRf,KAAM,OCvBCmF,oLCQG,IAGAzH,EAEVT,KAAKgF,MAHPkC,MACEC,OAAU1G,GAGd,OACE0D,EAAAxF,EAAAyF,cAACgD,EAAA,MAAD,CAAO7H,MAAOnB,EAAUoC,UAAW,CAAEC,OAClC,SAAAlC,GAAA,IAAGiD,EAAHjD,EAAGiD,KAAH,OAAc2C,EAAAxF,EAAAyF,cAAC+D,GAAD,CAAe3G,KAAMA,aATDuE,aCR3C,SAAAqC,KAAmR,OAA9PA,GAAA5J,OAAA6J,QAAA,SAAA7C,GAAgD,QAAA8C,EAAA,EAAgBA,EAAAnI,UAAAyB,OAAsB0G,IAAA,CAAO,IAAAC,EAAApI,UAAAmI,GAA2B,QAAAE,KAAAD,EAA0B/J,OAAAiK,UAAAC,eAAArD,KAAAkD,EAAAC,KAAyDhD,EAAAgD,GAAAD,EAAAC,IAAiC,OAAAhD,IAAkBtF,MAAAF,KAAAG,WAInR,IAAIwI,GAEJxE,EAAAxF,EAAKyF,cAAA,QACLwE,EAAA,+CAGIC,GAAY,SAAA7D,GAChB,OAASb,EAAAxF,EAAKyF,cAAA,MAAAgE,GAAA,CACdU,MAAA,GACAC,OAAA,GACAC,QAAA,aACGhE,GAAU2D,KAMEM,EAAAC,mYCff,IAAMC,GAAOhG,IAAOI,IAAV6F,MAYJC,GAAWlG,IAAOmG,GAAVC,MAsBCC,GAbqB,SAAAjL,GAAA,IAAGiD,EAAHjD,EAAGiD,KAAH,OAClC2C,EAAAxF,EAAAyF,cAAAD,EAAAxF,EAAA0F,SAAA,KACEF,EAAAxF,EAAAyF,cAAC6D,GAAD,CAAO7G,MAAO,gBAAiB2B,KAAM,OAAQe,OAAQK,EAAAxF,EAAAyF,cAACyE,GAAD,QACrD1E,EAAAxF,EAAAyF,cAACiF,GAAD,qCACC7H,EAAKxC,OACJwC,EAAKxC,MAAMyK,IAAI,SAAAnJ,GAAI,OACjB6D,EAAAxF,EAAAyF,cAACyD,GAAA,EAAD,CAAMC,GAAE,SAAAhG,OAAWxB,EAAKG,IAAM+H,IAAKlI,EAAKG,IACtC0D,EAAAxF,EAAAyF,cAACsF,GAAD,KAAOpJ,EAAKc,YCjCPuI,oLCMX,OACExF,EAAAxF,EAAAyF,cAACgD,EAAA,MAAD,CAAO7H,MAAOrB,GACX,SAAAK,GAAA,IAAGiD,EAAHjD,EAAGiD,KAAH,OAAc2C,EAAAxF,EAAAyF,cAACwF,GAAD,CAAgBpI,KAAMA,aAJDuE,aCiC7B8D,oLA7BX,OACE1F,EAAAxF,EAAAyF,cAAC0F,EAAA,EAAD,CAAeC,SAAUC,kBACvB7F,EAAAxF,EAAAyF,cAAC6F,EAAA,EAAD,KACE9F,EAAAxF,EAAAyF,cAAC8F,EAAA,EAAD,CACEC,OAAO,EACPC,KAAMJ,kBACNK,UAAWC,KAEbnG,EAAAxF,EAAAyF,cAAC8F,EAAA,EAAD,CACEC,OAAO,EACPC,KAAMJ,qBACNK,UAAWE,KAEbpG,EAAAxF,EAAAyF,cAAC8F,EAAA,EAAD,CACEC,OAAO,EACPC,KAAMJ,0BACNK,UAAWG,KAEbrG,EAAAxF,EAAAyF,cAAC8F,EAAA,EAAD,CACEC,OAAO,EACPC,KAAMJ,0BACNK,UAAWlB,cAvBLpD,ixCCLX,IAAM0E,GAAcC,YAAHC,MCKxBC,IAASC,OACP1G,EAAAxF,EAAAyF,cAACgD,EAAA,eAAD,CAAgBvE,OAAQA,GACtBsB,EAAAxF,EAAAyF,cAACqG,GAAD,MACAtG,EAAAxF,EAAAyF,cAAC0G,GAAD,OAEFC,SAASC,eAAe","file":"static/js/main.3a8e7cf7.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const NOTE_FRAGMENT = gql`\r\n  fragment NoteParts on Note {\r\n    id\r\n    title\r\n    content\r\n  }\r\n`;\r\n","import gql from \"graphql-tag\";\r\nimport { NOTE_FRAGMENT } from \"./fragments\";\r\n\r\nexport const GET_NOTES = gql`\r\n  {\r\n    notes @client {\r\n      ...NoteParts\r\n    }\r\n  }\r\n  ${NOTE_FRAGMENT}\r\n`;\r\n\r\nexport const GET_NOTE = gql`\r\n  query getNote($id: Int!) {\r\n    note(id: $id) @client {\r\n      ...NoteParts\r\n    }\r\n  }\r\n  ${NOTE_FRAGMENT}\r\n`;\r\n","import { ImmortalDB } from \"immortal-db\";\r\nimport { GET_NOTES } from \"./queries\";\r\n\r\nexport const saveNotes = async cache => {\r\n  const { notes } = cache.readQuery({ query: GET_NOTES });\r\n  const jsonNotes = JSON.stringify(notes);\r\n  try {\r\n    await ImmortalDB.set(\"notes\", jsonNotes);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const restoreNotes = async () => {\r\n  const notes = await ImmortalDB.get(\"notes\");\r\n  if (notes) {\r\n    try {\r\n      const parsedNotes = JSON.parse(notes);\r\n      return parsedNotes;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return [];\r\n    }\r\n  }\r\n  return [];\r\n};\r\n","import { NOTE_FRAGMENT } from \"./fragments\";\r\nimport { restoreNotes, saveNotes } from \"./offline\";\r\nimport { GET_NOTES } from \"./queries\";\r\n\r\nexport const resolvers = {\r\n  Query: {\r\n    note: (_, variables, { cache }) => {\r\n      const id = cache.config.dataIdFromObject({\r\n        __typename: \"Note\",\r\n        id: variables.id\r\n      });\r\n      const note = cache.readFragment({ fragment: NOTE_FRAGMENT, id });\r\n      return note;\r\n    }\r\n  },\r\n\r\n  Mutation: {\r\n    editNote: (_, { id, content, title }, { cache }) => {\r\n      const noteId = cache.config.dataIdFromObject({\r\n        __typename: \"Note\",\r\n        id\r\n      });\r\n      const updatedNote = {\r\n        __typename: \"Note\",\r\n        content,\r\n        id,\r\n        title\r\n      };\r\n      cache.writeFragment({\r\n        data: updatedNote,\r\n        fragment: NOTE_FRAGMENT,\r\n        id: noteId\r\n      });\r\n      saveNotes(cache);\r\n      return updatedNote;\r\n    },\r\n\r\n    createNote: (_, variables, { cache }) => {\r\n      const { notes } = cache.readQuery({ query: GET_NOTES });\r\n      const { title, content } = variables;\r\n      const newNote = {\r\n        __typename: \"Note\",\r\n        content,\r\n        id: notes.length + 1,\r\n        title\r\n      };\r\n      cache.writeData({\r\n        data: {\r\n          notes: [newNote, ...notes]\r\n        }\r\n      });\r\n      saveNotes(cache);\r\n      return newNote;\r\n    }\r\n  }\r\n};\r\n\r\nexport const defaults = {\r\n  notes: restoreNotes()\r\n};\r\nexport const typeDefs = [\r\n  `\r\n        schema {\r\n            query: Query\r\n            mutation: Mutation\r\n        }\r\n        type Query {\r\n            notes: [Note]!\r\n            note(id: Int!): Note\r\n        }\r\n        type Mutation {\r\n            createNote(title: String!, content: String!): Note\r\n            editNote(id: Int!, title: String, content: String): Note\r\n        }\r\n        type Note {\r\n            id: Int!\r\n            title: String!\r\n            content: String!\r\n        }\r\n    `\r\n];\r\n","import { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { ApolloClient } from \"apollo-client\";\r\nimport { ApolloLink } from \"apollo-link\";\r\nimport { withClientState } from \"apollo-link-state\";\r\nimport { defaults, resolvers, typeDefs } from \"./clientState\";\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst stateLink = withClientState({\r\n  cache,\r\n  defaults,\r\n  resolvers,\r\n  typeDefs\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link: ApolloLink.from([stateLink])\r\n});\r\n\r\nexport default client;\r\n","import React, { ChangeEvent, SFC } from \"react\";\r\nimport MarkdownRenderer from \"react-markdown-renderer\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  content: string;\r\n  onInputChange: (event: ChangeEvent<HTMLTextAreaElement>) => void;\r\n  onSave: () => void;\r\n}\r\n\r\nconst TitleInput = styled(TextareaAutosize)`\r\n  font-size: 50px;\r\n  font-weight: 600;\r\n  width: 100%;\r\n  &::placeholder {\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst ContentPreview = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 50px;\r\n`;\r\n\r\nconst ContentInput = styled(TextareaAutosize)`\r\n  font-size: 18px;\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Button = styled.button``;\r\n\r\nconst EditorPresenter: SFC<IProps> = ({\r\n  title,\r\n  content,\r\n  onInputChange,\r\n  onSave\r\n}) => (\r\n  <>\r\n    <TitleContainer>\r\n      <TitleInput\r\n        value={title}\r\n        onChange={onInputChange}\r\n        placeholder={\"Untitled...\"}\r\n        name={\"title\"}\r\n      />\r\n      <Button onClick={onSave}>Save</Button>\r\n    </TitleContainer>\r\n    <ContentPreview>\r\n      <ContentInput\r\n        value={content}\r\n        onChange={onInputChange}\r\n        placeholder={\"# This supports markdown!\"}\r\n        name={\"content\"}\r\n      />\r\n      <MarkdownRenderer markdown={content} className={\"markdown\"} />\r\n    </ContentPreview>\r\n  </>\r\n);\r\n\r\nexport default EditorPresenter;\r\n","import EditorContainer from \"./EditorContainer\";\r\nexport default EditorContainer;\r\n","import React, { ChangeEventHandler, Component } from \"react\";\r\nimport EditorPresenter from \"./EditorPresenter\";\r\n\r\ninterface IProps {\r\n  onChange: any;\r\n  onSave: any;\r\n  title?: string;\r\n  content?: string;\r\n  id?: number;\r\n}\r\n\r\ninterface IState {\r\n  title: string;\r\n  content: string;\r\n  id: number;\r\n}\r\n\r\nexport default class EditorContainer extends Component<IProps, IState> {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      content: props.content || \"\",\r\n      id: props.id || null,\r\n      title: props.title || \"\"\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    const { title, content } = this.state;\r\n\r\n    return (\r\n      <EditorPresenter\r\n        title={title}\r\n        content={content}\r\n        onInputChange={this.onInputChange}\r\n        onSave={this.onSave}\r\n      />\r\n    );\r\n  }\r\n\r\n  public onInputChange: ChangeEventHandler<HTMLTextAreaElement> = event => {\r\n    const {\r\n      target: { value, name }\r\n    } = event;\r\n    this.setState({\r\n      [name]: value\r\n    } as any);\r\n  };\r\n\r\n  public onSave = () => {\r\n    const { onSave } = this.props;\r\n    const { title, content, id } = this.state;\r\n    onSave(title, content, id);\r\n  };\r\n}\r\n","import React, { SFC } from \"react\";\r\nimport Editor from \"../../Components/Editor\";\r\n\r\ninterface IProps {\r\n  onSave: (title: string, content: string) => void;\r\n  onChange: any;\r\n}\r\n\r\nconst AddPresenter: SFC<IProps> = ({ onSave }) => (\r\n  <Editor onChange={null} onSave={onSave} />\r\n);\r\n\r\nexport default AddPresenter;\r\n","import gql from \"graphql-tag\";\r\nimport React, { Component } from \"react\";\r\nimport { Mutation, MutationFn } from \"react-apollo\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { addNote, addNoteVariables } from \"../../types/api\";\r\nimport AddPresenter from \"./AddPresenter\";\r\n\r\ninterface IProps extends RouteComponentProps<any> {}\r\nclass AddNoteMutation extends Mutation<addNote, addNoteVariables> {}\r\n\r\nconst ADD_NOTE = gql`\r\n  mutation createNote($title: String!, $content: String!) @client {\r\n    createNote(title: $title, content: $content) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nexport default class AddContainer extends Component<IProps> {\r\n  private createNote!: MutationFn<addNote, addNoteVariables>;\r\n\r\n  public render() {\r\n    return (\r\n      <AddNoteMutation mutation={ADD_NOTE}>\r\n        {createNote => {\r\n          this.createNote = createNote;\r\n          return <AddPresenter onChange={null} onSave={this.onSave} />;\r\n        }}\r\n      </AddNoteMutation>\r\n    );\r\n  }\r\n\r\n  public onSave = (title: string, content: string) => {\r\n    const {\r\n      history: { push }\r\n    } = this.props;\r\n    if (title !== \"\" && content !== \"\") {\r\n      this.createNote({ variables: { title, content } });\r\n      push(\"/\");\r\n    }\r\n  };\r\n}\r\n","import AddContainer from \"./AddContainer\";\r\nexport default AddContainer;\r\n","import React, { SFC } from \"react\";\r\nimport Editor from \"../../Components/Editor\";\r\n\r\ninterface IProps {\r\n  data: any;\r\n  onSave: any;\r\n}\r\n\r\nconst EditPresenter: SFC<IProps> = ({ data, onSave }) => {\r\n  const {\r\n    note: { title, content, id }\r\n  } = data;\r\n  return (\r\n    <Editor\r\n      title={title}\r\n      content={content}\r\n      id={id}\r\n      onSave={onSave}\r\n      onChange={null}\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditPresenter;\r\n","import gql from \"graphql-tag\";\r\nimport React, { Component } from \"react\";\r\nimport { Mutation, MutationFn, Query } from \"react-apollo\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { GET_NOTE } from \"../../queries\";\r\nimport { updateNote, updateNoteVariables } from \"../../types/api\";\r\nimport EditPresenter from \"./EditPresenter\";\r\n\r\ninterface IProps extends RouteComponentProps<any> {}\r\n\r\nconst EDIT_NOTE = gql`\r\n  mutation editNote($id: Int!, $title: String!, $content: String!) @client {\r\n    editNote(id: $id, title: $title, content: $content) {\r\n      id\r\n    }\r\n  }\r\n`;\r\n\r\nclass EditNoteMutation extends Mutation<updateNote, updateNoteVariables> {}\r\n\r\nexport default class EditContainer extends Component<IProps> {\r\n  private editNote!: MutationFn<updateNote, updateNoteVariables>;\r\n\r\n  public render() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n    return (\r\n      <Query query={GET_NOTE} variables={{ id }}>\r\n        {({ data }) =>\r\n          data.note ? (\r\n            <EditNoteMutation mutation={EDIT_NOTE}>\r\n              {editNote => {\r\n                this.editNote = editNote;\r\n                return <EditPresenter data={data} onSave={this.onSave} />;\r\n              }}\r\n            </EditNoteMutation>\r\n          ) : null\r\n        }\r\n      </Query>\r\n    );\r\n  }\r\n\r\n  public onSave = (title: string, content: string, id: number) => {\r\n    const {\r\n      history: { push }\r\n    } = this.props;\r\n    if (title !== \"\" && content !== \"\" && id) {\r\n      this.editNote({ variables: { title, content, id } });\r\n      push(\"/\");\r\n    }\r\n  };\r\n}\r\n","import EditContainer from \"./EditContainer\";\r\nexport default EditContainer;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { SFC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IProps {\r\n  title: string;\r\n  link: string;\r\n  button: any;\r\n}\r\n\r\nconst Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 50px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 50px;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  margin-left: 10px;\r\n  transform: scale(0.8);\r\n  background-color: #eee;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TitleContainer: SFC<IProps> = ({ title, link, button }) => (\r\n  <>\r\n    <Header>\r\n      <Title>{title}</Title>\r\n      <Link to={link}>\r\n        <Button>{button}</Button>\r\n      </Link>\r\n    </Header>\r\n  </>\r\n);\r\n\r\nTitleContainer.propTypes = {\r\n  button: PropTypes.any.isRequired,\r\n  link: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default TitleContainer;\r\n","import Title from \"./Title\";\r\nexport default Title;\r\n","import React, { SFC } from \"react\";\r\nimport MarkdownRenderer from \"react-markdown-renderer\";\r\nimport Title from \"../../Components/Title\";\r\n\r\ninterface IProps {\r\n  data: any;\r\n}\r\n\r\nconst NotePresenter: SFC<IProps> = ({ data }) => {\r\n  if (data.note) {\r\n    const {\r\n      note: { title, id: noteId, content }\r\n    } = data;\r\n    return (\r\n      <>\r\n        <Title title={title} button={\"Edit\"} link={`/edit/${noteId}`} />\r\n        <MarkdownRenderer markdown={content} />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <Title\r\n        title={\"This Note does not exist.\"}\r\n        button={\"back to index\"}\r\n        link={\"/\"}\r\n      />\r\n    );\r\n  }\r\n};\r\n\r\nexport default NotePresenter;\r\n","import NoteContainer from \"./NoteContainer\";\r\nexport default NoteContainer;\r\n","import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { GET_NOTE } from \"../../queries\";\r\nimport NotePresenter from \"./NotePresenter\";\r\n\r\ninterface IProps extends RouteComponentProps<any> {}\r\n\r\nexport default class NoteContainer extends Component<IProps> {\r\n  public render() {\r\n    const {\r\n      match: {\r\n        params: { id }\r\n      }\r\n    } = this.props;\r\n    return (\r\n      <Query query={GET_NOTE} variables={{ id }}>\r\n        {({ data }) => <NotePresenter data={data} />}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M24 10h-10v-10h-4v10h-10v4h10v10h4v-10h10z\"\n});\n\nvar SvgComponent = function SvgComponent(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\"\n  }, props), _ref);\n};\n\n{\n  \";\";\n}\nexport default __webpack_public_path__ + \"static/media/plus.370070c9.svg\";\nexport { SvgComponent as ReactComponent };","import React, { SFC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { ReactComponent as Plus } from \"../../Components/Icons/plus.svg\";\r\nimport Title from \"../../Components/Title\";\r\n\r\nconst Note = styled.div`\r\n  padding: 10px;\r\n  padding-left: 5px;\r\n  transition: background-color 0.1s linear;\r\n  cursor: pointer;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  &:hover {\r\n    background-color: #eee;\r\n  }\r\n`;\r\n\r\nconst Subtitle = styled.h2`\r\n  color: #a2a19e;\r\n  font-weight: 400;\r\n`;\r\n\r\ninterface IProps {\r\n  data: any;\r\n}\r\n\r\nconst NotesPresenter: SFC<IProps> = ({ data }) => (\r\n  <>\r\n    <Title title={\"Offline Notes\"} link={\"/add\"} button={<Plus />} />\r\n    <Subtitle>Taking notes while we learn.</Subtitle>\r\n    {data.notes &&\r\n      data.notes.map(note => (\r\n        <Link to={`/note/${note.id}`} key={note.id}>\r\n          <Note>{note.title}</Note>\r\n        </Link>\r\n      ))}\r\n  </>\r\n);\r\n\r\nexport default NotesPresenter;\r\n","import NotesContainer from \"./NotesContainer\";\r\nexport default NotesContainer;\r\n","import React, { Component } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { GET_NOTES } from \"../../queries\";\r\nimport NotesPresenter from \"./NotesPresenter\";\r\n\r\nexport default class NotesContainer extends Component {\r\n  public render() {\r\n    return (\r\n      <Query query={GET_NOTES}>\r\n        {({ data }) => <NotesPresenter data={data} />}\r\n      </Query>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Add from \"../../Routes/Add\";\r\nimport Edit from \"../../Routes/Edit\";\r\nimport Note from \"../../Routes/Note\";\r\nimport Notes from \"../../Routes/Notes\";\r\n\r\nclass App extends Component {\r\n  public render() {\r\n    return (\r\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n        <Switch>\r\n          <Route\r\n            exact={true}\r\n            path={process.env.PUBLIC_URL + \"/\"}\r\n            component={Notes}\r\n          />\r\n          <Route\r\n            exact={true}\r\n            path={process.env.PUBLIC_URL + \"/add\"}\r\n            component={Add}\r\n          />\r\n          <Route\r\n            exact={true}\r\n            path={process.env.PUBLIC_URL + \"/edit/:id\"}\r\n            component={Edit}\r\n          />\r\n          <Route\r\n            exact={true}\r\n            path={process.env.PUBLIC_URL + \"/note/:id\"}\r\n            component={Note}\r\n          />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    :root {\r\n        --greyColor: #A2A19E;\r\n        --blackColor: #373630;\r\n    }\r\n    body{\r\n        background-color:#F7F5F3;\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        color:var(--blackColor);\r\n        padding:50px 100px;\r\n        margin:0;\r\n    }\r\n    #root{\r\n        max-width:1000px;\r\n        width:100%;\r\n        margin:0 auto;\r\n    }\r\n    a {\r\n        color:inherit;\r\n        text-decoration:none;\r\n    }\r\n    div{\r\n        margin:0;\r\n    }\r\n    input,\r\n    textarea{\r\n        appearance:none;\r\n        border:none;\r\n        background-color:transparent;\r\n        resize:none;\r\n        &::placeholder {\r\n            color: #E7E7E6;\r\n        }\r\n        &:focus,\r\n        &:active{\r\n            outline:none;\r\n        }\r\n    }\r\n    .markdown a{\r\n        text-decoration:underline;\r\n    }\r\n    button{\r\n        appearance:none;\r\n        border:none;\r\n        background-color:transparent;\r\n        font-weight:600;\r\n        font-size:15px;\r\n        cursor:pointer;\r\n        border:2.5px solid var(--blackColor);\r\n        &:focus,\r\n        &:active{\r\n            outline:none\r\n        }\r\n    }\r\n`;\r\n","import React from \"react\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport ReactDOM from \"react-dom\";\r\nimport client from \"./apollo\";\r\nimport App from \"./Components/App/App\";\r\nimport { GlobalStyle } from \"./globalStyles\";\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <GlobalStyle />\r\n    <App />\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}